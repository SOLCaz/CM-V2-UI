{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/mikec/candy-machine-v2-responsive-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/mikec/candy-machine-v2-responsive-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/mikec/candy-machine-v2-responsive-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/mikec/candy-machine-v2-responsive-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import styled from'styled-components';import{useEffect,useState}from'react';import Button from'@material-ui/core/Button';import{CircularProgress}from'@material-ui/core';import{GatewayStatus,useGateway}from'@civic/solana-gateway-react';import{jsx as _jsx}from\"react/jsx-runtime\";export var CTAButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: block !important;\\n  margin: 0 auto !important;\\n  background-color: var(--title-text-color) !important;\\n  width: 140px;\\n  font-size: 1.2em;\\n\"])));export var MintButton=function MintButton(_ref){var onMint=_ref.onMint,candyMachine=_ref.candyMachine,isMinting=_ref.isMinting,isActive=_ref.isActive;var _useGateway=useGateway(),requestGatewayToken=_useGateway.requestGatewayToken,gatewayStatus=_useGateway.gatewayStatus;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),clicked=_useState2[0],setClicked=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isVerifying=_useState4[0],setIsVerifying=_useState4[1];useEffect(function(){setIsVerifying(false);if(gatewayStatus===GatewayStatus.COLLECTING_USER_INFORMATION&&clicked){// when user approves wallet verification txn\nsetIsVerifying(true);}else if(gatewayStatus===GatewayStatus.ACTIVE&&clicked){console.log('Verified human, now minting...');onMint();setClicked(false);}},[gatewayStatus,clicked,setClicked,onMint]);return/*#__PURE__*/_jsx(CTAButton,{disabled:(candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.isSoldOut)||isMinting||!isActive||isVerifying,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(isActive&&(candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.gatekeeper)&&gatewayStatus!==GatewayStatus.ACTIVE)){_context.next=7;break;}console.log('Requesting gateway token');setClicked(true);_context.next=5;return requestGatewayToken();case 5:_context.next=10;break;case 7:console.log('Minting...');_context.next=10;return onMint();case 10:case\"end\":return _context.stop();}}},_callee);})),variant:\"contained\",children:!candyMachine?\"CONNECTING...\":(candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.isSoldOut)?'SOLD OUT':isActive?isVerifying?'VERIFYING...':isMinting?/*#__PURE__*/_jsx(CircularProgress,{}):\"MINT\":(candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.goLiveDate)?\"SOON\":\"UNAVAILABLE\"});};","map":{"version":3,"sources":["C:/Users/mikec/candy-machine-v2-responsive-ui/src/MintButton.tsx"],"names":["styled","useEffect","useState","Button","CircularProgress","GatewayStatus","useGateway","CTAButton","MintButton","onMint","candyMachine","isMinting","isActive","requestGatewayToken","gatewayStatus","clicked","setClicked","isVerifying","setIsVerifying","COLLECTING_USER_INFORMATION","ACTIVE","console","log","state","isSoldOut","gatekeeper","goLiveDate"],"mappings":"irBAAA,MAAOA,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,OAAQC,gBAAR,KAA+B,mBAA/B,CACA,OAASC,aAAT,CAAwBC,UAAxB,KAA0C,6BAA1C,C,2CAIA,MAAO,IAAMC,CAAAA,SAAS,CAAGP,MAAM,CAACG,MAAD,CAAT,8NAAf,CAQP,MAAO,IAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAUpB,IATyBC,CAAAA,MASzB,MATyBA,MASzB,CARyBC,YAQzB,MARyBA,YAQzB,CAPyBC,SAOzB,MAPyBA,SAOzB,CANyBC,QAMzB,MANyBA,QAMzB,iBAC6CN,UAAU,EADvD,CACMO,mBADN,aACMA,mBADN,CAC2BC,aAD3B,aAC2BA,aAD3B,eAE4BZ,QAAQ,CAAC,KAAD,CAFpC,wCAEKa,OAFL,eAEcC,UAFd,8BAGoCd,QAAQ,CAAC,KAAD,CAH5C,yCAGKe,WAHL,eAGkBC,cAHlB,eAKFjB,SAAS,CAAC,UAAM,CACZiB,cAAc,CAAC,KAAD,CAAd,CACA,GAAIJ,aAAa,GAAKT,aAAa,CAACc,2BAAhC,EAA+DJ,OAAnE,CAA4E,CACxE;AACAG,cAAc,CAAC,IAAD,CAAd,CACH,CAHD,IAIK,IAAIJ,aAAa,GAAKT,aAAa,CAACe,MAAhC,EAA0CL,OAA9C,CAAuD,CACxDM,OAAO,CAACC,GAAR,CAAY,gCAAZ,EACAb,MAAM,GACNO,UAAU,CAAC,KAAD,CAAV,CACH,CACJ,CAXQ,CAWN,CAACF,aAAD,CAAgBC,OAAhB,CAAyBC,UAAzB,CAAqCP,MAArC,CAXM,CAAT,CAaA,mBACI,KAAC,SAAD,EACI,QAAQ,CACJ,CAAAC,YAAY,OAAZ,EAAAA,YAAY,SAAZ,QAAAA,YAAY,CAAEa,KAAd,CAAoBC,SAApB,GACAb,SADA,EAEA,CAACC,QAFD,EAGAK,WALR,CAOI,OAAO,sEAAE,wIACDL,QAAQ,GAAIF,YAAJ,SAAIA,YAAJ,iBAAIA,YAAY,CAAEa,KAAd,CAAoBE,UAAxB,CAAR,EAA8CX,aAAa,GAAKT,aAAa,CAACe,MAD7E,0BAEDC,OAAO,CAACC,GAAR,CAAY,0BAAZ,EACAN,UAAU,CAAC,IAAD,CAAV,CAHC,sBAIKH,CAAAA,mBAAmB,EAJxB,sCAMDQ,OAAO,CAACC,GAAR,CAAY,YAAZ,EANC,uBAOKb,CAAAA,MAAM,EAPX,wDAAF,EAPX,CAiBI,OAAO,CAAC,WAjBZ,UAmBK,CAACC,YAAD,CACG,eADH,CAEG,CAAAA,YAAY,OAAZ,EAAAA,YAAY,SAAZ,QAAAA,YAAY,CAAEa,KAAd,CAAoBC,SAApB,EACA,UADA,CAEAZ,QAAQ,CACRK,WAAW,CAAG,cAAH,CACPN,SAAS,cACL,KAAC,gBAAD,IADK,CAGL,MALA,CAOP,CAAAD,YAAY,OAAZ,EAAAA,YAAY,SAAZ,QAAAA,YAAY,CAAEa,KAAd,CAAoBG,UAApB,EACD,MADC,CAGD,aAjCR,EADJ,CAsCH,CAlEM","sourcesContent":["import styled from 'styled-components';\r\nimport { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {CircularProgress} from '@material-ui/core';\r\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\r\nimport { CandyMachine } from './candy-machine';\r\n\r\n\r\nexport const CTAButton = styled(Button)`\r\n  display: block !important;\r\n  margin: 0 auto !important;\r\n  background-color: var(--title-text-color) !important;\r\n  width: 140px;\r\n  font-size: 1.2em;\r\n`;\r\n\r\nexport const MintButton = ({\r\n                               onMint,\r\n                               candyMachine,\r\n                               isMinting,\r\n                               isActive\r\n                           }: {\r\n    onMint: () => Promise<void>;\r\n    candyMachine: CandyMachine | undefined;\r\n    isMinting: boolean;\r\n    isActive: boolean;\r\n}) => {\r\n    const { requestGatewayToken, gatewayStatus } = useGateway();\r\n    const [clicked, setClicked] = useState(false);\r\n    const [isVerifying, setIsVerifying] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsVerifying(false);\r\n        if (gatewayStatus === GatewayStatus.COLLECTING_USER_INFORMATION && clicked) {\r\n            // when user approves wallet verification txn\r\n            setIsVerifying(true);\r\n        }\r\n        else if (gatewayStatus === GatewayStatus.ACTIVE && clicked) {\r\n            console.log('Verified human, now minting...');\r\n            onMint();\r\n            setClicked(false);\r\n        }\r\n    }, [gatewayStatus, clicked, setClicked, onMint]);\r\n\r\n    return (\r\n        <CTAButton\r\n            disabled={\r\n                candyMachine?.state.isSoldOut ||\r\n                isMinting ||\r\n                !isActive ||\r\n                isVerifying\r\n            }\r\n            onClick={async () => {\r\n                if (isActive && candyMachine?.state.gatekeeper && gatewayStatus !== GatewayStatus.ACTIVE) {\r\n                    console.log('Requesting gateway token');\r\n                    setClicked(true);\r\n                    await requestGatewayToken();\r\n                } else {\r\n                    console.log('Minting...');\r\n                    await onMint();\r\n                }\r\n            }}\r\n            variant=\"contained\"\r\n        >\r\n            {!candyMachine ? (\r\n                \"CONNECTING...\"\r\n            ) : candyMachine?.state.isSoldOut ? (\r\n                'SOLD OUT'\r\n            ) : isActive ? (\r\n                isVerifying ? 'VERIFYING...' :\r\n                    isMinting ? (\r\n                        <CircularProgress />\r\n                    ) : (\r\n                        \"MINT\"\r\n                    )\r\n            ) : (candyMachine?.state.goLiveDate ? (\r\n                \"SOON\"\r\n            ) : (\r\n                \"UNAVAILABLE\"\r\n            ))}\r\n        </CTAButton>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}